{"version":3,"file":"static/js/991.c90d5a86.chunk.js","mappings":"gQA2EA,MAnEA,WACE,OAOIA,EAAAA,EAAAA,KAAY,SAACC,GAAD,OAAWA,EAAMC,QAAjB,IANdC,EADF,EACEA,OACAC,EAFF,EAEEA,UACAC,EAHF,EAGEA,YACAC,EAJF,EAIEA,aACAC,EALF,EAKEA,QAGF,GARA,EAMEC,cAE4BC,EAAAA,EAAAA,UAAS,KAAvC,eAAOC,EAAP,KAAgBC,EAAhB,KACMC,GAAOC,EAAAA,EAAAA,IAAeP,GACtBQ,GAAWC,EAAAA,EAAAA,MACXC,GAAeC,EAAAA,EAAAA,cAAY,WAC/B,KAAIP,EAAQQ,OAAS,GAGnB,OAAOC,MAAM,6DAFbL,GAASM,EAAAA,EAAAA,IAAaC,GAIzB,IACKA,EAAc,CAClBC,UAAW,GACXC,eAAgBb,EAChBP,OAAAA,EACAqB,OAAQ,GACRC,WAAY,KACZC,aAAc,GAEhB,OACE,iCACE,gBAAKC,UAAU,aAAf,6CACA,iBAAKA,UAAU,iBAAf,WACE,gBAAKA,UAAU,6CAAf,SACGvB,KAEH,iBAAKuB,UAAU,kCAAf,WACE,gBAAKA,UAAU,uBAAf,iCACA,iBAAKA,UAAU,aAAf,UACGpB,EAAQqB,UADX,UACwBrB,EAAQsB,YAGlC,iBAAKF,UAAU,kCAAf,WACE,gBAAKA,UAAU,uBAAf,iCACA,gBAAKA,UAAU,aAAf,SAA6Bf,QAG/B,gBAAKe,UAAU,oCAAf,UACGG,EAAAA,EAAAA,IAAMzB,SAGX,iBAAKsB,UAAU,6BAAf,WACE,gBAAKA,UAAU,iBAAf,wCACA,kBACEI,KAAK,OACLJ,UAAU,iBACVK,YAAY,2BACZC,SAAU,SAACC,GACTvB,EAAWuB,EAAEC,OAAOC,MACrB,KAEH,mBAAQL,KAAK,SAASJ,UAAU,iBAAiBU,QAASrB,EAA1D,4CAMP,E,UC1DD,MAZA,YAAwC,IAATsB,EAAQ,EAARA,KAC7B,OACE,+BACE,iBAAKX,UAAU,iEAAf,WACE,gBAAKA,UAAU,6CAAf,SAA6DW,EAAKT,QAClE,gBAAKF,UAAU,mBAAf,SAAmCW,EAAKf,qBAI/C,ECQD,MAhBA,WACE,IAAQf,GAAiBR,EAAAA,EAAAA,KAAY,SAACC,GAAD,OAAWA,EAAMC,QAAjB,IAA7BM,aAMR,OAJAC,EAAAA,EAAAA,WAAS,WAEN,KAGD,yBACGD,EAAa+B,KAAI,SAACD,GAAD,OAChB,SAAC,EAAD,CAA0CA,KAAMA,GAAtBA,EAAKhB,UADf,IAEfkB,WAGR,E,UCeD,MApBA,WACE,IAAMC,GAASzC,EAAAA,EAAAA,KAAY,SAACC,GAAD,OAAWA,EAAMyC,IAAjB,KAC3BC,EAAAA,EAAAA,GAAiB,eAAgBF,GACjC,IAAMG,GAASC,EAAAA,EAAAA,MACT/B,GAAWC,EAAAA,EAAAA,MAQjB,OAPA+B,EAAAA,EAAAA,YAAU,WAGR,OAFAhC,GAASiC,EAAAA,EAAAA,IAAaH,EAAOzC,SAC7BW,GAASkC,EAAAA,EAAAA,IAAYJ,EAAOzC,SACrB,WACLW,GAASmC,EAAAA,EAAAA,MACV,CACF,GAAE,KAED,iCACE,SAAC,EAAD,KACA,SAAC,EAAD,MAGL,C,+CCbD,IATyB,SAACd,EAAQlC,GAChC,IAAMiD,GAAWC,EAAAA,EAAAA,OACjBL,EAAAA,EAAAA,YAAU,WACJ7C,GACFiD,EAASf,EAAQ,CAAEiB,SAAS,GAE/B,GAAE,GACJ,C,uGCdYC,EAAa,SAACzC,GACzB,OAAO0C,IAAM1C,GAAM2C,OAAO,+BAC3B,EAMY1C,EAAiB,SAACD,GAC7B,OAAO0C,IAAM1C,GAAM2C,OAAO,sBAC3B,C","sources":["component/main/board/viewcontent/ViewContentComp.jsx","component/main/board/viewcontent/commentitems/ViewCommentItemComp.jsx","component/main/board/viewcontent/ViewCommentComp.jsx","component/pages/main/board/viewcontent/ViewContentPage.jsx","hooks/useNavigateGuard.js","utils/dayjs.utils.js"],"sourcesContent":["import React, { useCallback, useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport parse from \"html-react-parser\";\nimport { fullDateParser } from \"../../../../utils/dayjs.utils\";\n\nimport { POST_COMMENT } from \"../../../../store/features/postItemSlice\";\nimport { toast } from \"react-toastify\";\n\nfunction ViewContentComp() {\n  const {\n    postNo,\n    postTitle,\n    postContent,\n    postCreateDt,\n    userDto,\n    postComments,\n  } = useSelector((state) => state.postItem);\n  const [comment, setComment] = useState(\"\");\n  const date = fullDateParser(postCreateDt);\n  const dispatch = useDispatch();\n  const writeComment = useCallback(() => {\n    if (comment.length > 1) {\n      dispatch(POST_COMMENT(commentData));\n    } else {\n      return alert(\"댓글 내용이 없습니다.\");\n    }\n  });\n  const commentData = {\n    commentNo: \"\",\n    commentContent: comment,\n    postNo,\n    userId: 29,\n    assignment: null,\n    topCommentNo: 0,\n  };\n  return (\n    <>\n      <div className=\"page_title\">자유게시판</div>\n      <div className=\"post_container\">\n        <div className=\"col-span-12 border-t border-b p-4 text-2xl\">\n          {postTitle}\n        </div>\n        <div className=\"col-span-6 grid grid-cols-6 p-4\">\n          <div className=\"col-span-2 font-bold\">작성자</div>\n          <div className=\"col-span-2\">\n            {userDto.userClass}반 {userDto.name}\n          </div>\n        </div>\n        <div className=\"col-span-6 grid grid-cols-6 p-4\">\n          <div className=\"col-span-2 font-bold\">등록일</div>\n          <div className=\"col-span-4\">{date}</div>\n        </div>\n\n        <div className=\"col-span-12 border-t border-b p-4\">\n          {parse(postContent)}\n        </div>\n      </div>\n      <div className=\"mt-5 mb-5 grid grid-cols-8\">\n        <div className=\"col-span-1 p-4\">댓글 쓰기</div>\n        <input\n          type=\"text\"\n          className=\"col-span-5 p-4\"\n          placeholder=\"댓글내용\"\n          onChange={(e) => {\n            setComment(e.target.value);\n          }}\n        />\n        <button type=\"button\" className=\"col-span-2 p-4\" onClick={writeComment}>\n          댓글 쓰기\n        </button>\n      </div>\n    </>\n  );\n}\n\nexport default ViewContentComp;\n","import React from \"react\";\n\n\nfunction ViewCommentItemComp({ item }) {\n  return (\n    <>\n      <div className=\"grid grid-cols-12  p-4  border-gray-200 border-t border-b mt-4\" >\n        <div className=\"col-span-2 text-center font-bold border-r \">{item.name}</div>\n        <div className=\"col-span-10 pl-4\">{item.commentContent}</div>\n      </div>\n    </>\n  );\n}\n\n\nexport default ViewCommentItemComp;","import React, { useState } from \"react\";\nimport { useSelector } from \"react-redux\";\nimport ViewCommentItemComp from \"./commentitems/ViewCommentItemComp\";\n\nfunction ViewCommentComp() {\n  const { postComments } = useSelector((state) => state.postItem);\n\n  useState(() => {return\n    // TODO : CLEANUP\n    }\n  )\n  return (\n    <div>\n      {postComments.map((item) => (\n        <ViewCommentItemComp key={item.commentNo} item={item} />\n      )).reverse()}\n    </div>\n  );\n}\n\nexport default ViewCommentComp;\n","import React, { useCallback, useEffect } from \"react\";\nimport ViewContentComp from \"../../../../main/board/viewcontent/ViewContentComp\";\nimport { useParams } from \"react-router\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport {\n  GET_COMMENT,\n  GET_POSTITEM,\n  POST_COMMENT,\n  RESET_POSTITEMSLICE,\n} from \"../../../../../store/features/postItemSlice\";\nimport ViewCommentComp from \"../../../../main/board/viewcontent/ViewCommentComp\";\nimport useNavigateGuard from \"../../../../../hooks/useNavigateGuard\";\n\nfunction ViewContentPage() {\n  const isAuth = useSelector((state) => state.auth);\n  useNavigateGuard(\"/auth/login\", !isAuth);\n  const params = useParams();\n  const dispatch = useDispatch();\n  useEffect(() => {\n    dispatch(GET_POSTITEM(params.postNo));\n    dispatch(GET_COMMENT(params.postNo));\n    return () => {\n      dispatch(RESET_POSTITEMSLICE());\n    };\n  }, []);\n  return (\n    <>\n      <ViewContentComp />\n      <ViewCommentComp />\n    </>\n  );\n}\n\nexport default ViewContentPage;\n","import { useNavigate } from \"react-router\";\nimport { useEffect } from \"react\";\n\n/**\n * Navigation Guard\n * @param target\n * @param state\n */\n\nconst useNavigateGuard = (target, state) => {\n  const navigate = useNavigate();\n  useEffect(() => {\n    if (state) {\n      navigate(target, { replace: true });\n    }\n  }, []);\n};\n\nexport default useNavigateGuard;\n","import dayjs from \"dayjs\";\n\nexport const dateParser = (date) => {\n  return dayjs(date).format('YYYY년 MM월 DD일')\n}\n\nexport const timeParser = (date) => {\n  return dayjs(date).format('HH시 mm분 ss초')\n}\n\nexport const fullDateParser = (date) => {\n  return dayjs(date).format('YYYY-MM-DD HH:mm:ss')\n}"],"names":["useSelector","state","postItem","postNo","postTitle","postContent","postCreateDt","userDto","postComments","useState","comment","setComment","date","fullDateParser","dispatch","useDispatch","writeComment","useCallback","length","alert","POST_COMMENT","commentData","commentNo","commentContent","userId","assignment","topCommentNo","className","userClass","name","parse","type","placeholder","onChange","e","target","value","onClick","item","map","reverse","isAuth","auth","useNavigateGuard","params","useParams","useEffect","GET_POSTITEM","GET_COMMENT","RESET_POSTITEMSLICE","navigate","useNavigate","replace","dateParser","dayjs","format"],"sourceRoot":""}